// Generated by CoffeeScript 1.8.0
var FrontendHelper;

FrontendHelper = (function() {
  var instance;

  instance = null;

  function FrontendHelper() {
    $("body").on("click", ".expandpumplist", function(e) {
      $(".pumplist").toggleClass("expand");
      e.preventDefault();
      return e.stopPropagation();
    });
    $("body").on("click", ".addPump", function(e) {
      CocktailUi.getInstance().addPump(CocktailUi.getInstance().getEmptyPumpConfig());
      e.preventDefault();
      return e.stopPropagation();
    });
    $("body").on("click", ".navbar-brand", function(e) {
      if (UnsavedHelper.getInstance().denieIfUnsaved(this)) {
        return;
      }
      return CocktailUi.getInstance().showArea(CocktailUi.AREA_INDEX);
    });
    $("body").on("click", ".addRecipe", function(e) {
      var config;
      if (UnsavedHelper.getInstance().denieIfUnsaved(this)) {
        return;
      }
      e.preventDefault();
      e.stopPropagation();
      config = $(this).closest(".configuration").data("config");
      return RecipeGenerator.getInstance().saveNewEmptyRecipeToConfig(config);
    });
    $("body").on("click", ".globaldeletebutton", function(e) {
      e.preventDefault();
      e.stopPropagation();
      return CocktailUi.getInstance().deleteButtonClick();
    });
    $("body").on("click", ".globalsavebutton", function(e) {
      e.preventDefault();
      e.stopPropagation();
      return CocktailUi.getInstance().saveButtonClick();
    });
    $("body").on("click", ".globalduplicatebutton", function(e) {
      e.preventDefault();
      e.stopPropagation();
      return CocktailUi.getInstance().duplicateButtonClick();
    });
    $("body").on("click", ".availableRecipes li", function(e) {
      var config, recipe;
      if (UnsavedHelper.getInstance().denieIfUnsaved(this)) {
        return;
      }
      recipe = $(this).data();
      $(".active").removeClass("active");
      $(this).addClass("active");
      config = $(this).closest(".configuration").data("config");
      return RecipeGenerator.getInstance().loadRecipeGenerator(config, recipe);
    });
    $("body").on("click", "#newConfig", function(e) {
      if (UnsavedHelper.getInstance().denieIfUnsaved(this)) {
        return;
      }
      return CocktailUi.getInstance().createNewConfig();
    });
  }

  FrontendHelper.getInstance = function() {
    return instance != null ? instance : instance = new FrontendHelper();
  };

  FrontendHelper.prototype.selectConfigFroMenu = function(uuid) {
    return $("#" + uuid + " a").click();
  };

  FrontendHelper.prototype.selectRecipeFromMenu = function(uuid) {
    return $("#" + uuid).click();
  };

  return FrontendHelper;

})();
